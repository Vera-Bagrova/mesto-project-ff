{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Получаем Темплейт карточки\nconst getTemplate = () => {\n  return document\n    .querySelector(\"#card-template\")\n    .content.querySelector(\".card\")\n    .cloneNode(true);\n};\n\n// Функция создания карточки (принимает в качестве параметров данные карточки, функции обработки её событий и id текущего пользователя)\nexport const createCard = (cardData, currentUserId, onDelete, onLike, openPopup) => {\n  const cardElement = getTemplate();\n  const cardImage = cardElement.querySelector('.card__image');\n  const cardTitle = cardElement.querySelector('.card__title');\n  const deleteButton = cardElement.querySelector('.card__delete-button');\n  const likeButton = cardElement.querySelector('.card__like-button');\n  const likeCount = cardElement.querySelector('.card__like-count');\n\n  /**  присваиваем значения элементов клонированного шаблона */\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n  cardTitle.textContent = cardData.name;\n\n  if(cardData.owner._id !== currentUserId) {\n    deleteButton.remove(); \n  } else {\n    /** обработчик клика иконки удаления, по которому будет вызван переданный в аргументах колбэк */\n    deleteButton.addEventListener('click', () => {\n      onDelete(cardElement, cardData._id);\n    });\n  };\n  \n  // проверяем наличие уже поставленного лайка пользователем\n  const isLiked = cardData.likes.some((user) => user._id === currentUserId);\n\n  if(isLiked) {\n    likeButton.classList.add('card__like-button_is-active');\n  };\n  \n  countLikes(likeCount, cardData);\n\n  /** обработчик клика иконки лайка, по которому будет вызван переданный в аргументах колбэк */\n  likeButton.addEventListener('click', () => {\n    onLike(likeCount, likeButton, cardData);\n  });\n\n  /** обработчик клика по изображению, по которому будет вызван переданный в аргументах колбэк */\n  cardImage.addEventListener('click', () => {\n    openPopup(cardImage.src, cardTitle.textContent);\n  });\n\n  return cardElement;\n}\n\n// Функция-обработчик события удаления карточки\nexport const deleteCard = (card) => {\n  card.remove();  \n}\n\n// Функция подсчета лайков карточки\nexport const countLikes = (container, imageData) => {\n  container.textContent = imageData.likes.length;\n};","const setPopupEventListeners = (popup) => {\n  popup.classList.add('popup_is-animated');\n  const closeButton = popup.querySelector('.popup__close');\n  closeButton.addEventListener('click', () => {\n    closeModal(popup);\n  })\n};\n\n// Функция открытия попапа\nconst openModal = (popupElement) => {\n  popupElement.classList.add('popup_is-opened');\n\n  document.addEventListener('keydown', handleEscModal);\n  popupElement.addEventListener('click', handleCloseModal);\n}\n\n// Функция закрытия попапа\nconst closeModal = (popupElement) => {\n  popupElement.classList.toggle('popup_is-opened');\n\n  document.removeEventListener('keydown', handleEscModal);\n  popupElement.removeEventListener('click', handleCloseModal);\n}\n\n// Функция-обработчик события нажатия Esc\nconst handleEscModal = (evt) => {\n  if (evt.key === 'Escape') {\n    const popupOpened = document.querySelector('.popup_is-opened');\n    closeModal(popupOpened);\n  };\n}\n\n// Функция-обработчик события клика по оверлею\nconst handleCloseModal = (evt) => {\n  if (evt.target.classList.contains('popup')) {\n    closeModal(evt.target);\n  };\n}\n\nexport { openModal, closeModal, setPopupEventListeners };\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(config.errorClass);\n};\n\nconst hideInputError = (formElement, inputElement, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.classList.remove(config.errorClass); \n  errorElement.textContent = '';\n};\n\n// Проверка правильности ввода\nconst checkInputValidity = (formElement, inputElement, config) => {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n      inputElement.setCustomValidity(\"\");\n    }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\n  } else {\n    hideInputError(formElement, inputElement, config);\n  }\n};\n\n// Проверка наличия невалидного поля\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  })\n}; \n\nconst toggleButtonState = (inputList, buttonElement, config) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass); \n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  }\n}; \n\nconst setEventListeners = (formElement, config) => {\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n\n  // проверяем состояние кнопки в самом начале\n  toggleButtonState(inputList, buttonElement, config);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      checkInputValidity(formElement, inputElement, config);\n      // проверяем состояние кнопки при изменении любого из полей\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n};\n\n// Включение валидации (для всех форм)\n// принимает все нужные функциям классы и селекторы элементов как объект настроек\nexport const enableValidation = (config) => {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n  formList.forEach((formElement) => {\n    formElement.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n    });\n\n    setEventListeners(formElement, config);\n  });\n};\n\n// Очищаем ошибки валидации формы и делаем кнопку неактивной\nexport const clearValidation = (formElement, config) => {\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n  \n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, config);\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n};","//базовый адрес сервера, ключ авторизации, опции запроса\nconst config = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/wff-cohort-32',\n  headers: {\n    authorization: '2b3de0c8-0244-4191-b38a-9f0605d0630a',\n    'Content-Type': 'application/json'\n  }\n}\n\nexport const handleResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  };\n\n  // если ошибка, отклоняем промис\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n// Загрузка информации о пользователе с сервера\nexport const getUserInfo = () => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    headers: config.headers\n  })\n    .then(handleResponse);\n};\n\n// Загрузка карточек с сервера\nexport const getInitialCards = () => {\n  return fetch(`${config.baseUrl}/cards`, {\n    headers: config.headers\n  })\n    .then(handleResponse);\n};\n\n// Редактирование профиля\nexport const editProfile = (dataProfile) => {\n  const body = JSON.stringify(dataProfile);\n\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body,\n  })\n    .then(handleResponse);\n};\n\n// Добавление новой карточки\nexport const postNewCard = (data) => {\n  const body = JSON.stringify(data);\n\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body,\n  })\n    .then(handleResponse);\n};\n\n// Запрос на удаление карточки\nexport const deleteItem = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers\n  })\n    .then(handleResponse);\n};\n\n// Постановка и снятие лайка\nexport const likeItem = (cardId, method) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: method,\n    headers: config.headers\n  })\n    .then(handleResponse);\n};\n\n// Обновление аватара пользователя\nexport const updateAvatar = (avatar) => {\n  const body = JSON.stringify({avatar});\n\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body,\n  })\n    .then(handleResponse);\n};\n\n","import './pages/index.css';\nimport { createCard, deleteCard, countLikes } from './scripts/card.js'; \nimport { openModal, closeModal, setPopupEventListeners } from './scripts/modal.js';\nimport { enableValidation, clearValidation } from './scripts/validation.js'; \nimport { getUserInfo, getInitialCards, editProfile, postNewCard, deleteItem, likeItem, updateAvatar } from './scripts/api.js';\n\n// DOM узлы\nconst content = document.querySelector('.content');\nconst profileImage = content.querySelector('.profile__image');\nconst cardsContainer = content.querySelector('.places__list');\nconst editPopupButton = document.querySelector('.profile__edit-button');\nconst newItemPopupButton = document.querySelector('.profile__add-button');\nconst profileTitle = content.querySelector('.profile__title');\nconst profileDescription = content.querySelector('.profile__description');\n/** модальные окна */\nconst popups = document.querySelectorAll('.popup');\nconst updatePopup = document.querySelector('.popup_type_update');\nconst editPopup = document.querySelector('.popup_type_edit');\nconst newCardPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst deletePopup = document.querySelector('.popup_type_delete');\n\n/** форма обновления аватара и поле формы */\nconst formUpdate = document.forms['update-avatar'];\nconst avatarLinkInput = formUpdate.elements.link;\n\n/** форма редактирования профиля и поля формы */\nconst formEdit = document.forms['edit-profile'];\nconst nameInput = formEdit.elements.name;\nconst jobInput = formEdit.elements.description;\n\n/** форма добавления карточки и поля формы */\nconst formNewPlace = document.forms['new-place'];\nconst placeInput = formNewPlace.elements['place-name'];\nconst linkInput = formNewPlace.elements.link;\n\n/** форма удаления карточки и переменные для API-запроса */\nconst formDelete = document.forms['delete-card'];\nlet deletedCardElem = '';\nlet deletedCardId = '';\n\nPromise.all([getUserInfo(), getInitialCards()])\n  .then(([userInfo, initialCards]) => {\n    profileImage.style.backgroundImage = `url(${userInfo.avatar})`;\n    profileTitle.textContent = userInfo.name;\n    profileDescription.textContent = userInfo.about;\n\n    // Выводим карточки на страницу\n    initialCards.forEach(elem => {\n      const card = createCard(elem, userInfo._id, handleDelete, handleLike, handleCardClick);\n\n      cardsContainer.append(card);\n    });\n  })\n  .catch(handleError);\n\n/** объект настроек, включающий все нужные функциям валидации классы и селекторы элементов */\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n  \nenableValidation(validationConfig);\n\nconst handleError = (err) => {\n  console.log(err); \n};\n\nconst renderLoading = (submitButton, isLoading) => {\n  if (isLoading) {\n    submitButton.textContent = 'Сохранение...';\n  } else {\n    submitButton.textContent = 'Сохранить';\n  }\n}\n\npopups.forEach((popup) => {\n  setPopupEventListeners(popup);\n});\n\n// Функция-обработчик события клика по корзине карточки\nconst handleDelete = (cardElem, cardId) => {\n  deletedCardElem = cardElem;\n  deletedCardId = cardId;\n  \n  openModal(deletePopup);\n};\n\n// Обработчик события отправки подтверждения удаления карточки\nconst handleDeleteSubmit = (evt) => {\n  evt.preventDefault();\n\n  deleteItem(deletedCardId)\n    .then(() => {\n      deleteCard(deletedCardElem);\n\n      closeModal(deletePopup);\n    })\n    .catch(handleError);\n};\n\n// Слушатель события подтверждения удаления карточки\nformDelete.addEventListener('submit', handleDeleteSubmit);\n\n// Функция-обработчик события клика по лайку карточки\nconst handleLike = (count, button, data) => {\n   if(button.classList.contains('card__like-button_is-active')) {\n    likeItem(data._id, 'DELETE')\n      .then((newData) => {\n        countLikes(count, newData);\n        button.classList.toggle('card__like-button_is-active');\n      })\n      .catch(handleError);\n  } else {\n    likeItem(data._id, 'PUT')\n      .then((newData) => {\n        countLikes(count, newData);\n        button.classList.toggle('card__like-button_is-active');\n      })\n      .catch(handleError);\n  };\n};\n\n// Функция-обработчик события клика по изображению карточки\nconst handleCardClick = (src, name) => {\n  /**  находим элементы Попапа картинки */\n  const imgPopup = imagePopup.querySelector('.popup__image');\n  const captionPopup = imagePopup.querySelector('.popup__caption');\n\n  /** Присваиваем элементам окна нужные значения */\n  imgPopup.src = src;\n  imgPopup.alt = name;\n  captionPopup.textContent = name;\n  \n  openModal(imagePopup);\n}\n\n// Слушатель события клика аватара пользователя\nprofileImage.addEventListener('click', () => {\n  formUpdate.reset();\n  clearValidation(updatePopup, validationConfig); \n  openModal(updatePopup);\n});\n\n// Обработчик события отправки формы обновления аватара\nconst handleFormUpdateSubmit = (evt) => {\n  evt.preventDefault();\n\n  const submitButton = evt.submitter;\n  renderLoading(submitButton, true);\n\n  updateAvatar(avatarLinkInput.value)\n    .then((dataProfile) => {\n      profileImage.style.backgroundImage = `url(${dataProfile.avatar})`;\n\n      closeModal(updatePopup);\n      formUpdate.reset();\n    })\n    .catch(handleError)\n    .finally(() => {\n      renderLoading(submitButton, false);\n    });\n};\n\n// Слушатель события отправки формы обновления аватара\nformUpdate.addEventListener('submit', handleFormUpdateSubmit); \n\n// Слушатель события клика кнопки редактирования профиля\neditPopupButton.addEventListener('click', () => {\n  nameInput.value = profileTitle.textContent;\n  jobInput.value = profileDescription.textContent;\n\n  clearValidation(editPopup, validationConfig); \n  openModal(editPopup);\n});\n\n// Обработчик события отправки формы редактирования профиля\nconst handleFormEditSubmit = (evt) => {\n  evt.preventDefault();\n\n  const submitButton = evt.submitter;\n  renderLoading(submitButton, true);\n\n  editProfile({\n  name: nameInput.value,\n  about: jobInput.value\n  })\n    .then((dataProfile) => {\n      profileTitle.textContent = dataProfile.name;\n      profileDescription.textContent = dataProfile.about;\n\n      closeModal(editPopup);\n      formEdit.reset();\n    })\n    .catch(handleError)\n    .finally(() => {\n      renderLoading(submitButton, false);\n    });\n}\n\n// Слушатель события отправки формы редактирования профиля\nformEdit.addEventListener('submit', handleFormEditSubmit); \n\n// Слушатель события клика кнопки добавления карточки\nnewItemPopupButton.addEventListener('click', () => {\n  formNewPlace.reset(); \n  clearValidation(newCardPopup, validationConfig);\n  openModal(newCardPopup);\n});\n\n// Обработчик события отправки формы добавления карточки\nconst handleFormCardSubmit = (evt) => { \n  evt.preventDefault(); \n\n  const submitButton = evt.submitter;\n  renderLoading(submitButton, true);\n  \n  const inputData = {\n    name: placeInput.value,\n    link: linkInput.value,\n  };\n  \n  postNewCard(inputData)\n    .then((newCardData) => {\n      const newCard = createCard(newCardData, newCardData.owner._id, handleDelete, handleLike, handleCardClick);\n\n      cardsContainer.prepend(newCard);\n\n      closeModal(newCardPopup);\n      formNewPlace.reset();\n    })\n    .catch(handleError)\n    .finally(() => {\n      renderLoading(submitButton, false);\n    });\n}\n\n// Слушатель события отправки формы добавления карточки\nformNewPlace.addEventListener('submit', handleFormCardSubmit);"],"names":["createCard","cardData","currentUserId","onDelete","onLike","openPopup","cardElement","document","querySelector","content","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likeCount","src","link","alt","name","textContent","owner","_id","remove","addEventListener","likes","some","user","classList","add","countLikes","container","imageData","length","openModal","popupElement","handleEscModal","handleCloseModal","closeModal","toggle","removeEventListener","evt","key","popupOpened","target","contains","hideInputError","formElement","inputElement","config","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","status","likeItem","cardId","method","fetch","then","profileImage","cardsContainer","editPopupButton","newItemPopupButton","profileTitle","profileDescription","popups","updatePopup","editPopup","newCardPopup","imagePopup","deletePopup","formUpdate","forms","avatarLinkInput","elements","formEdit","nameInput","jobInput","description","formNewPlace","placeInput","linkInput","formDelete","deletedCardElem","deletedCardId","all","_ref","_ref2","userInfo","initialCards","style","backgroundImage","avatar","about","elem","card","handleDelete","handleLike","handleCardClick","append","catch","handleError","validationConfig","formSelector","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","err","console","log","renderLoading","submitButton","isLoading","popup","setPopupEventListeners","cardElem","count","button","data","newData","imgPopup","captionPopup","reset","body","submitter","value","JSON","stringify","dataProfile","finally","newCardData","newCard","prepend"],"sourceRoot":""}